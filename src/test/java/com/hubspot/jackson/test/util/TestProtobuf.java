// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

package com.hubspot.jackson.test.util;

public final class TestProtobuf {
  private TestProtobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Enum
      implements com.google.protobuf.ProtocolMessageEnum {
    ONE(0, 1),
    TWO(1, 2),
    ;
    
    public static final int ONE_VALUE = 1;
    public static final int TWO_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static Enum valueOf(int value) {
      switch (value) {
        case 1: return ONE;
        case 2: return TWO;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Enum>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
            public Enum findValueByNumber(int number) {
              return Enum.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.hubspot.jackson.test.util.TestProtobuf.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Enum[] VALUES = {
      ONE, TWO, 
    };
    
    public static Enum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Enum(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:com.hubspot.jackson.test.util.Enum)
  }
  
  public interface AllFieldsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional double double = 1;
    boolean hasDouble();
    double getDouble();
    
    // optional float float = 2;
    boolean hasFloat();
    float getFloat();
    
    // optional int32 int32 = 3;
    boolean hasInt32();
    int getInt32();
    
    // optional int64 int64 = 4;
    boolean hasInt64();
    long getInt64();
    
    // optional uint32 uint32 = 5;
    boolean hasUint32();
    int getUint32();
    
    // optional uint64 uint64 = 6;
    boolean hasUint64();
    long getUint64();
    
    // optional sint32 sint32 = 7;
    boolean hasSint32();
    int getSint32();
    
    // optional sint64 sint64 = 8;
    boolean hasSint64();
    long getSint64();
    
    // optional fixed32 fixed32 = 9;
    boolean hasFixed32();
    int getFixed32();
    
    // optional fixed64 fixed64 = 10;
    boolean hasFixed64();
    long getFixed64();
    
    // optional sfixed32 sfixed32 = 11;
    boolean hasSfixed32();
    int getSfixed32();
    
    // optional sfixed64 sfixed64 = 12;
    boolean hasSfixed64();
    long getSfixed64();
    
    // optional bool bool = 13;
    boolean hasBool();
    boolean getBool();
    
    // optional string string = 14;
    boolean hasString();
    String getString();
    
    // optional bytes bytes = 15;
    boolean hasBytes();
    com.google.protobuf.ByteString getBytes();
    
    // optional .com.hubspot.jackson.test.util.Enum enum = 16;
    boolean hasEnum();
    com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum();
    
    // optional .com.hubspot.jackson.test.util.Nested nested = 17;
    boolean hasNested();
    com.hubspot.jackson.test.util.TestProtobuf.Nested getNested();
    com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder getNestedOrBuilder();
  }
  public static final class AllFields extends
      com.google.protobuf.GeneratedMessage
      implements AllFieldsOrBuilder {
    // Use AllFields.newBuilder() to construct.
    private AllFields(Builder builder) {
      super(builder);
    }
    private AllFields(boolean noInit) {}
    
    private static final AllFields defaultInstance;
    public static AllFields getDefaultInstance() {
      return defaultInstance;
    }
    
    public AllFields getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_AllFields_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_AllFields_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional double double = 1;
    public static final int DOUBLE_FIELD_NUMBER = 1;
    private double double_;
    public boolean hasDouble() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getDouble() {
      return double_;
    }
    
    // optional float float = 2;
    public static final int FLOAT_FIELD_NUMBER = 2;
    private float float_;
    public boolean hasFloat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getFloat() {
      return float_;
    }
    
    // optional int32 int32 = 3;
    public static final int INT32_FIELD_NUMBER = 3;
    private int int32_;
    public boolean hasInt32() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getInt32() {
      return int32_;
    }
    
    // optional int64 int64 = 4;
    public static final int INT64_FIELD_NUMBER = 4;
    private long int64_;
    public boolean hasInt64() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getInt64() {
      return int64_;
    }
    
    // optional uint32 uint32 = 5;
    public static final int UINT32_FIELD_NUMBER = 5;
    private int uint32_;
    public boolean hasUint32() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getUint32() {
      return uint32_;
    }
    
    // optional uint64 uint64 = 6;
    public static final int UINT64_FIELD_NUMBER = 6;
    private long uint64_;
    public boolean hasUint64() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getUint64() {
      return uint64_;
    }
    
    // optional sint32 sint32 = 7;
    public static final int SINT32_FIELD_NUMBER = 7;
    private int sint32_;
    public boolean hasSint32() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getSint32() {
      return sint32_;
    }
    
    // optional sint64 sint64 = 8;
    public static final int SINT64_FIELD_NUMBER = 8;
    private long sint64_;
    public boolean hasSint64() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getSint64() {
      return sint64_;
    }
    
    // optional fixed32 fixed32 = 9;
    public static final int FIXED32_FIELD_NUMBER = 9;
    private int fixed32_;
    public boolean hasFixed32() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getFixed32() {
      return fixed32_;
    }
    
    // optional fixed64 fixed64 = 10;
    public static final int FIXED64_FIELD_NUMBER = 10;
    private long fixed64_;
    public boolean hasFixed64() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public long getFixed64() {
      return fixed64_;
    }
    
    // optional sfixed32 sfixed32 = 11;
    public static final int SFIXED32_FIELD_NUMBER = 11;
    private int sfixed32_;
    public boolean hasSfixed32() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getSfixed32() {
      return sfixed32_;
    }
    
    // optional sfixed64 sfixed64 = 12;
    public static final int SFIXED64_FIELD_NUMBER = 12;
    private long sfixed64_;
    public boolean hasSfixed64() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public long getSfixed64() {
      return sfixed64_;
    }
    
    // optional bool bool = 13;
    public static final int BOOL_FIELD_NUMBER = 13;
    private boolean bool_;
    public boolean hasBool() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public boolean getBool() {
      return bool_;
    }
    
    // optional string string = 14;
    public static final int STRING_FIELD_NUMBER = 14;
    private java.lang.Object string_;
    public boolean hasString() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getString() {
      java.lang.Object ref = string_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          string_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStringBytes() {
      java.lang.Object ref = string_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        string_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bytes bytes = 15;
    public static final int BYTES_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString bytes_;
    public boolean hasBytes() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public com.google.protobuf.ByteString getBytes() {
      return bytes_;
    }
    
    // optional .com.hubspot.jackson.test.util.Enum enum = 16;
    public static final int ENUM_FIELD_NUMBER = 16;
    private com.hubspot.jackson.test.util.TestProtobuf.Enum enum_;
    public boolean hasEnum() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum() {
      return enum_;
    }
    
    // optional .com.hubspot.jackson.test.util.Nested nested = 17;
    public static final int NESTED_FIELD_NUMBER = 17;
    private com.hubspot.jackson.test.util.TestProtobuf.Nested nested_;
    public boolean hasNested() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public com.hubspot.jackson.test.util.TestProtobuf.Nested getNested() {
      return nested_;
    }
    public com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder getNestedOrBuilder() {
      return nested_;
    }
    
    private void initFields() {
      double_ = 0D;
      float_ = 0F;
      int32_ = 0;
      int64_ = 0L;
      uint32_ = 0;
      uint64_ = 0L;
      sint32_ = 0;
      sint64_ = 0L;
      fixed32_ = 0;
      fixed64_ = 0L;
      sfixed32_ = 0;
      sfixed64_ = 0L;
      bool_ = false;
      string_ = "";
      bytes_ = com.google.protobuf.ByteString.EMPTY;
      enum_ = com.hubspot.jackson.test.util.TestProtobuf.Enum.ONE;
      nested_ = com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, double_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, float_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, int32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, int64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, uint32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, uint64_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, sint32_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt64(8, sint64_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed32(9, fixed32_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed64(10, fixed64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSFixed32(11, sfixed32_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSFixed64(12, sfixed64_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, bool_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getStringBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, bytes_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeEnum(16, enum_.getNumber());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(17, nested_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, double_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, float_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, bool_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getStringBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytes_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, enum_.getNumber());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, nested_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.AllFields parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hubspot.jackson.test.util.TestProtobuf.AllFields prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hubspot.jackson.test.util.TestProtobuf.AllFieldsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_AllFields_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_AllFields_fieldAccessorTable;
      }
      
      // Construct using com.hubspot.jackson.test.util.TestProtobuf.AllFields.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNestedFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        double_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        float_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        int32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        bool_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        string_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        bytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        enum_ = com.hubspot.jackson.test.util.TestProtobuf.Enum.ONE;
        bitField0_ = (bitField0_ & ~0x00008000);
        if (nestedBuilder_ == null) {
          nested_ = com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance();
        } else {
          nestedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hubspot.jackson.test.util.TestProtobuf.AllFields.getDescriptor();
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.AllFields getDefaultInstanceForType() {
        return com.hubspot.jackson.test.util.TestProtobuf.AllFields.getDefaultInstance();
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.AllFields build() {
        com.hubspot.jackson.test.util.TestProtobuf.AllFields result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hubspot.jackson.test.util.TestProtobuf.AllFields buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hubspot.jackson.test.util.TestProtobuf.AllFields result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.AllFields buildPartial() {
        com.hubspot.jackson.test.util.TestProtobuf.AllFields result = new com.hubspot.jackson.test.util.TestProtobuf.AllFields(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.double_ = double_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.float_ = float_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int32_ = int32_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int64_ = int64_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uint32_ = uint32_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uint64_ = uint64_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sint32_ = sint32_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sint64_ = sint64_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixed32_ = fixed32_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fixed64_ = fixed64_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sfixed32_ = sfixed32_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sfixed64_ = sfixed64_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.bool_ = bool_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.string_ = string_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.bytes_ = bytes_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.enum_ = enum_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (nestedBuilder_ == null) {
          result.nested_ = nested_;
        } else {
          result.nested_ = nestedBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hubspot.jackson.test.util.TestProtobuf.AllFields) {
          return mergeFrom((com.hubspot.jackson.test.util.TestProtobuf.AllFields)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hubspot.jackson.test.util.TestProtobuf.AllFields other) {
        if (other == com.hubspot.jackson.test.util.TestProtobuf.AllFields.getDefaultInstance()) return this;
        if (other.hasDouble()) {
          setDouble(other.getDouble());
        }
        if (other.hasFloat()) {
          setFloat(other.getFloat());
        }
        if (other.hasInt32()) {
          setInt32(other.getInt32());
        }
        if (other.hasInt64()) {
          setInt64(other.getInt64());
        }
        if (other.hasUint32()) {
          setUint32(other.getUint32());
        }
        if (other.hasUint64()) {
          setUint64(other.getUint64());
        }
        if (other.hasSint32()) {
          setSint32(other.getSint32());
        }
        if (other.hasSint64()) {
          setSint64(other.getSint64());
        }
        if (other.hasFixed32()) {
          setFixed32(other.getFixed32());
        }
        if (other.hasFixed64()) {
          setFixed64(other.getFixed64());
        }
        if (other.hasSfixed32()) {
          setSfixed32(other.getSfixed32());
        }
        if (other.hasSfixed64()) {
          setSfixed64(other.getSfixed64());
        }
        if (other.hasBool()) {
          setBool(other.getBool());
        }
        if (other.hasString()) {
          setString(other.getString());
        }
        if (other.hasBytes()) {
          setBytes(other.getBytes());
        }
        if (other.hasEnum()) {
          setEnum(other.getEnum());
        }
        if (other.hasNested()) {
          mergeNested(other.getNested());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              double_ = input.readDouble();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              float_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              int32_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              int64_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uint32_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uint64_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sint32_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sint64_ = input.readSInt64();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              fixed32_ = input.readFixed32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              fixed64_ = input.readFixed64();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              sfixed32_ = input.readSFixed32();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              sfixed64_ = input.readSFixed64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              bool_ = input.readBool();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              string_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              bytes_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              com.hubspot.jackson.test.util.TestProtobuf.Enum value = com.hubspot.jackson.test.util.TestProtobuf.Enum.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00008000;
                enum_ = value;
              }
              break;
            }
            case 138: {
              com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder subBuilder = com.hubspot.jackson.test.util.TestProtobuf.Nested.newBuilder();
              if (hasNested()) {
                subBuilder.mergeFrom(getNested());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNested(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional double double = 1;
      private double double_ ;
      public boolean hasDouble() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getDouble() {
        return double_;
      }
      public Builder setDouble(double value) {
        bitField0_ |= 0x00000001;
        double_ = value;
        onChanged();
        return this;
      }
      public Builder clearDouble() {
        bitField0_ = (bitField0_ & ~0x00000001);
        double_ = 0D;
        onChanged();
        return this;
      }
      
      // optional float float = 2;
      private float float_ ;
      public boolean hasFloat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getFloat() {
        return float_;
      }
      public Builder setFloat(float value) {
        bitField0_ |= 0x00000002;
        float_ = value;
        onChanged();
        return this;
      }
      public Builder clearFloat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        float_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 int32 = 3;
      private int int32_ ;
      public boolean hasInt32() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getInt32() {
        return int32_;
      }
      public Builder setInt32(int value) {
        bitField0_ |= 0x00000004;
        int32_ = value;
        onChanged();
        return this;
      }
      public Builder clearInt32() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 int64 = 4;
      private long int64_ ;
      public boolean hasInt64() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getInt64() {
        return int64_;
      }
      public Builder setInt64(long value) {
        bitField0_ |= 0x00000008;
        int64_ = value;
        onChanged();
        return this;
      }
      public Builder clearInt64() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint32 uint32 = 5;
      private int uint32_ ;
      public boolean hasUint32() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getUint32() {
        return uint32_;
      }
      public Builder setUint32(int value) {
        bitField0_ |= 0x00000010;
        uint32_ = value;
        onChanged();
        return this;
      }
      public Builder clearUint32() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uint32_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint64 uint64 = 6;
      private long uint64_ ;
      public boolean hasUint64() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getUint64() {
        return uint64_;
      }
      public Builder setUint64(long value) {
        bitField0_ |= 0x00000020;
        uint64_ = value;
        onChanged();
        return this;
      }
      public Builder clearUint64() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uint64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional sint32 sint32 = 7;
      private int sint32_ ;
      public boolean hasSint32() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getSint32() {
        return sint32_;
      }
      public Builder setSint32(int value) {
        bitField0_ |= 0x00000040;
        sint32_ = value;
        onChanged();
        return this;
      }
      public Builder clearSint32() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sint32_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint64 sint64 = 8;
      private long sint64_ ;
      public boolean hasSint64() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getSint64() {
        return sint64_;
      }
      public Builder setSint64(long value) {
        bitField0_ |= 0x00000080;
        sint64_ = value;
        onChanged();
        return this;
      }
      public Builder clearSint64() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sint64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional fixed32 fixed32 = 9;
      private int fixed32_ ;
      public boolean hasFixed32() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getFixed32() {
        return fixed32_;
      }
      public Builder setFixed32(int value) {
        bitField0_ |= 0x00000100;
        fixed32_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixed32() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed32_ = 0;
        onChanged();
        return this;
      }
      
      // optional fixed64 fixed64 = 10;
      private long fixed64_ ;
      public boolean hasFixed64() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public long getFixed64() {
        return fixed64_;
      }
      public Builder setFixed64(long value) {
        bitField0_ |= 0x00000200;
        fixed64_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixed64() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fixed64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional sfixed32 sfixed32 = 11;
      private int sfixed32_ ;
      public boolean hasSfixed32() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getSfixed32() {
        return sfixed32_;
      }
      public Builder setSfixed32(int value) {
        bitField0_ |= 0x00000400;
        sfixed32_ = value;
        onChanged();
        return this;
      }
      public Builder clearSfixed32() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed32_ = 0;
        onChanged();
        return this;
      }
      
      // optional sfixed64 sfixed64 = 12;
      private long sfixed64_ ;
      public boolean hasSfixed64() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public long getSfixed64() {
        return sfixed64_;
      }
      public Builder setSfixed64(long value) {
        bitField0_ |= 0x00000800;
        sfixed64_ = value;
        onChanged();
        return this;
      }
      public Builder clearSfixed64() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sfixed64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional bool bool = 13;
      private boolean bool_ ;
      public boolean hasBool() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public boolean getBool() {
        return bool_;
      }
      public Builder setBool(boolean value) {
        bitField0_ |= 0x00001000;
        bool_ = value;
        onChanged();
        return this;
      }
      public Builder clearBool() {
        bitField0_ = (bitField0_ & ~0x00001000);
        bool_ = false;
        onChanged();
        return this;
      }
      
      // optional string string = 14;
      private java.lang.Object string_ = "";
      public boolean hasString() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getString() {
        java.lang.Object ref = string_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          string_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setString(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        string_ = value;
        onChanged();
        return this;
      }
      public Builder clearString() {
        bitField0_ = (bitField0_ & ~0x00002000);
        string_ = getDefaultInstance().getString();
        onChanged();
        return this;
      }
      void setString(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        string_ = value;
        onChanged();
      }
      
      // optional bytes bytes = 15;
      private com.google.protobuf.ByteString bytes_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasBytes() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public com.google.protobuf.ByteString getBytes() {
        return bytes_;
      }
      public Builder setBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        bytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearBytes() {
        bitField0_ = (bitField0_ & ~0x00004000);
        bytes_ = getDefaultInstance().getBytes();
        onChanged();
        return this;
      }
      
      // optional .com.hubspot.jackson.test.util.Enum enum = 16;
      private com.hubspot.jackson.test.util.TestProtobuf.Enum enum_ = com.hubspot.jackson.test.util.TestProtobuf.Enum.ONE;
      public boolean hasEnum() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum() {
        return enum_;
      }
      public Builder setEnum(com.hubspot.jackson.test.util.TestProtobuf.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00008000;
        enum_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnum() {
        bitField0_ = (bitField0_ & ~0x00008000);
        enum_ = com.hubspot.jackson.test.util.TestProtobuf.Enum.ONE;
        onChanged();
        return this;
      }
      
      // optional .com.hubspot.jackson.test.util.Nested nested = 17;
      private com.hubspot.jackson.test.util.TestProtobuf.Nested nested_ = com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.hubspot.jackson.test.util.TestProtobuf.Nested, com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder, com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder> nestedBuilder_;
      public boolean hasNested() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Nested getNested() {
        if (nestedBuilder_ == null) {
          return nested_;
        } else {
          return nestedBuilder_.getMessage();
        }
      }
      public Builder setNested(com.hubspot.jackson.test.util.TestProtobuf.Nested value) {
        if (nestedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nested_ = value;
          onChanged();
        } else {
          nestedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      public Builder setNested(
          com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder builderForValue) {
        if (nestedBuilder_ == null) {
          nested_ = builderForValue.build();
          onChanged();
        } else {
          nestedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      public Builder mergeNested(com.hubspot.jackson.test.util.TestProtobuf.Nested value) {
        if (nestedBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              nested_ != com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance()) {
            nested_ =
              com.hubspot.jackson.test.util.TestProtobuf.Nested.newBuilder(nested_).mergeFrom(value).buildPartial();
          } else {
            nested_ = value;
          }
          onChanged();
        } else {
          nestedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      public Builder clearNested() {
        if (nestedBuilder_ == null) {
          nested_ = com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance();
          onChanged();
        } else {
          nestedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder getNestedBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getNestedFieldBuilder().getBuilder();
      }
      public com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder getNestedOrBuilder() {
        if (nestedBuilder_ != null) {
          return nestedBuilder_.getMessageOrBuilder();
        } else {
          return nested_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.hubspot.jackson.test.util.TestProtobuf.Nested, com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder, com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder> 
          getNestedFieldBuilder() {
        if (nestedBuilder_ == null) {
          nestedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.hubspot.jackson.test.util.TestProtobuf.Nested, com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder, com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder>(
                  nested_,
                  getParentForChildren(),
                  isClean());
          nested_ = null;
        }
        return nestedBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.hubspot.jackson.test.util.AllFields)
    }
    
    static {
      defaultInstance = new AllFields(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hubspot.jackson.test.util.AllFields)
  }
  
  public interface RepeatedFieldsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated double double = 1;
    java.util.List<java.lang.Double> getDoubleList();
    int getDoubleCount();
    double getDouble(int index);
    
    // repeated float float = 2;
    java.util.List<java.lang.Float> getFloatList();
    int getFloatCount();
    float getFloat(int index);
    
    // repeated int32 int32 = 3;
    java.util.List<java.lang.Integer> getInt32List();
    int getInt32Count();
    int getInt32(int index);
    
    // repeated int64 int64 = 4;
    java.util.List<java.lang.Long> getInt64List();
    int getInt64Count();
    long getInt64(int index);
    
    // repeated uint32 uint32 = 5;
    java.util.List<java.lang.Integer> getUint32List();
    int getUint32Count();
    int getUint32(int index);
    
    // repeated uint64 uint64 = 6;
    java.util.List<java.lang.Long> getUint64List();
    int getUint64Count();
    long getUint64(int index);
    
    // repeated sint32 sint32 = 7;
    java.util.List<java.lang.Integer> getSint32List();
    int getSint32Count();
    int getSint32(int index);
    
    // repeated sint64 sint64 = 8;
    java.util.List<java.lang.Long> getSint64List();
    int getSint64Count();
    long getSint64(int index);
    
    // repeated fixed32 fixed32 = 9;
    java.util.List<java.lang.Integer> getFixed32List();
    int getFixed32Count();
    int getFixed32(int index);
    
    // repeated fixed64 fixed64 = 10;
    java.util.List<java.lang.Long> getFixed64List();
    int getFixed64Count();
    long getFixed64(int index);
    
    // repeated sfixed32 sfixed32 = 11;
    java.util.List<java.lang.Integer> getSfixed32List();
    int getSfixed32Count();
    int getSfixed32(int index);
    
    // repeated sfixed64 sfixed64 = 12;
    java.util.List<java.lang.Long> getSfixed64List();
    int getSfixed64Count();
    long getSfixed64(int index);
    
    // repeated bool bool = 13;
    java.util.List<java.lang.Boolean> getBoolList();
    int getBoolCount();
    boolean getBool(int index);
    
    // repeated string string = 14;
    java.util.List<String> getStringList();
    int getStringCount();
    String getString(int index);
    
    // repeated bytes bytes = 15;
    java.util.List<com.google.protobuf.ByteString> getBytesList();
    int getBytesCount();
    com.google.protobuf.ByteString getBytes(int index);
    
    // repeated .com.hubspot.jackson.test.util.Enum enum = 16;
    java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Enum> getEnumList();
    int getEnumCount();
    com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum(int index);
    
    // repeated .com.hubspot.jackson.test.util.Nested nested = 17;
    java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Nested> 
        getNestedList();
    com.hubspot.jackson.test.util.TestProtobuf.Nested getNested(int index);
    int getNestedCount();
    java.util.List<? extends com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder> 
        getNestedOrBuilderList();
    com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder getNestedOrBuilder(
        int index);
  }
  public static final class RepeatedFields extends
      com.google.protobuf.GeneratedMessage
      implements RepeatedFieldsOrBuilder {
    // Use RepeatedFields.newBuilder() to construct.
    private RepeatedFields(Builder builder) {
      super(builder);
    }
    private RepeatedFields(boolean noInit) {}
    
    private static final RepeatedFields defaultInstance;
    public static RepeatedFields getDefaultInstance() {
      return defaultInstance;
    }
    
    public RepeatedFields getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_RepeatedFields_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_RepeatedFields_fieldAccessorTable;
    }
    
    // repeated double double = 1;
    public static final int DOUBLE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> double_;
    public java.util.List<java.lang.Double>
        getDoubleList() {
      return double_;
    }
    public int getDoubleCount() {
      return double_.size();
    }
    public double getDouble(int index) {
      return double_.get(index);
    }
    
    // repeated float float = 2;
    public static final int FLOAT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> float_;
    public java.util.List<java.lang.Float>
        getFloatList() {
      return float_;
    }
    public int getFloatCount() {
      return float_.size();
    }
    public float getFloat(int index) {
      return float_.get(index);
    }
    
    // repeated int32 int32 = 3;
    public static final int INT32_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> int32_;
    public java.util.List<java.lang.Integer>
        getInt32List() {
      return int32_;
    }
    public int getInt32Count() {
      return int32_.size();
    }
    public int getInt32(int index) {
      return int32_.get(index);
    }
    
    // repeated int64 int64 = 4;
    public static final int INT64_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> int64_;
    public java.util.List<java.lang.Long>
        getInt64List() {
      return int64_;
    }
    public int getInt64Count() {
      return int64_.size();
    }
    public long getInt64(int index) {
      return int64_.get(index);
    }
    
    // repeated uint32 uint32 = 5;
    public static final int UINT32_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> uint32_;
    public java.util.List<java.lang.Integer>
        getUint32List() {
      return uint32_;
    }
    public int getUint32Count() {
      return uint32_.size();
    }
    public int getUint32(int index) {
      return uint32_.get(index);
    }
    
    // repeated uint64 uint64 = 6;
    public static final int UINT64_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> uint64_;
    public java.util.List<java.lang.Long>
        getUint64List() {
      return uint64_;
    }
    public int getUint64Count() {
      return uint64_.size();
    }
    public long getUint64(int index) {
      return uint64_.get(index);
    }
    
    // repeated sint32 sint32 = 7;
    public static final int SINT32_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> sint32_;
    public java.util.List<java.lang.Integer>
        getSint32List() {
      return sint32_;
    }
    public int getSint32Count() {
      return sint32_.size();
    }
    public int getSint32(int index) {
      return sint32_.get(index);
    }
    
    // repeated sint64 sint64 = 8;
    public static final int SINT64_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> sint64_;
    public java.util.List<java.lang.Long>
        getSint64List() {
      return sint64_;
    }
    public int getSint64Count() {
      return sint64_.size();
    }
    public long getSint64(int index) {
      return sint64_.get(index);
    }
    
    // repeated fixed32 fixed32 = 9;
    public static final int FIXED32_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> fixed32_;
    public java.util.List<java.lang.Integer>
        getFixed32List() {
      return fixed32_;
    }
    public int getFixed32Count() {
      return fixed32_.size();
    }
    public int getFixed32(int index) {
      return fixed32_.get(index);
    }
    
    // repeated fixed64 fixed64 = 10;
    public static final int FIXED64_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> fixed64_;
    public java.util.List<java.lang.Long>
        getFixed64List() {
      return fixed64_;
    }
    public int getFixed64Count() {
      return fixed64_.size();
    }
    public long getFixed64(int index) {
      return fixed64_.get(index);
    }
    
    // repeated sfixed32 sfixed32 = 11;
    public static final int SFIXED32_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> sfixed32_;
    public java.util.List<java.lang.Integer>
        getSfixed32List() {
      return sfixed32_;
    }
    public int getSfixed32Count() {
      return sfixed32_.size();
    }
    public int getSfixed32(int index) {
      return sfixed32_.get(index);
    }
    
    // repeated sfixed64 sfixed64 = 12;
    public static final int SFIXED64_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> sfixed64_;
    public java.util.List<java.lang.Long>
        getSfixed64List() {
      return sfixed64_;
    }
    public int getSfixed64Count() {
      return sfixed64_.size();
    }
    public long getSfixed64(int index) {
      return sfixed64_.get(index);
    }
    
    // repeated bool bool = 13;
    public static final int BOOL_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Boolean> bool_;
    public java.util.List<java.lang.Boolean>
        getBoolList() {
      return bool_;
    }
    public int getBoolCount() {
      return bool_.size();
    }
    public boolean getBool(int index) {
      return bool_.get(index);
    }
    
    // repeated string string = 14;
    public static final int STRING_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList string_;
    public java.util.List<String>
        getStringList() {
      return string_;
    }
    public int getStringCount() {
      return string_.size();
    }
    public String getString(int index) {
      return string_.get(index);
    }
    
    // repeated bytes bytes = 15;
    public static final int BYTES_FIELD_NUMBER = 15;
    private java.util.List<com.google.protobuf.ByteString> bytes_;
    public java.util.List<com.google.protobuf.ByteString>
        getBytesList() {
      return bytes_;
    }
    public int getBytesCount() {
      return bytes_.size();
    }
    public com.google.protobuf.ByteString getBytes(int index) {
      return bytes_.get(index);
    }
    
    // repeated .com.hubspot.jackson.test.util.Enum enum = 16;
    public static final int ENUM_FIELD_NUMBER = 16;
    private java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Enum> enum_;
    public java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Enum> getEnumList() {
      return enum_;
    }
    public int getEnumCount() {
      return enum_.size();
    }
    public com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum(int index) {
      return enum_.get(index);
    }
    
    // repeated .com.hubspot.jackson.test.util.Nested nested = 17;
    public static final int NESTED_FIELD_NUMBER = 17;
    private java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Nested> nested_;
    public java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Nested> getNestedList() {
      return nested_;
    }
    public java.util.List<? extends com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder> 
        getNestedOrBuilderList() {
      return nested_;
    }
    public int getNestedCount() {
      return nested_.size();
    }
    public com.hubspot.jackson.test.util.TestProtobuf.Nested getNested(int index) {
      return nested_.get(index);
    }
    public com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder getNestedOrBuilder(
        int index) {
      return nested_.get(index);
    }
    
    private void initFields() {
      double_ = java.util.Collections.emptyList();;
      float_ = java.util.Collections.emptyList();;
      int32_ = java.util.Collections.emptyList();;
      int64_ = java.util.Collections.emptyList();;
      uint32_ = java.util.Collections.emptyList();;
      uint64_ = java.util.Collections.emptyList();;
      sint32_ = java.util.Collections.emptyList();;
      sint64_ = java.util.Collections.emptyList();;
      fixed32_ = java.util.Collections.emptyList();;
      fixed64_ = java.util.Collections.emptyList();;
      sfixed32_ = java.util.Collections.emptyList();;
      sfixed64_ = java.util.Collections.emptyList();;
      bool_ = java.util.Collections.emptyList();;
      string_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bytes_ = java.util.Collections.emptyList();;
      enum_ = java.util.Collections.emptyList();
      nested_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < double_.size(); i++) {
        output.writeDouble(1, double_.get(i));
      }
      for (int i = 0; i < float_.size(); i++) {
        output.writeFloat(2, float_.get(i));
      }
      for (int i = 0; i < int32_.size(); i++) {
        output.writeInt32(3, int32_.get(i));
      }
      for (int i = 0; i < int64_.size(); i++) {
        output.writeInt64(4, int64_.get(i));
      }
      for (int i = 0; i < uint32_.size(); i++) {
        output.writeUInt32(5, uint32_.get(i));
      }
      for (int i = 0; i < uint64_.size(); i++) {
        output.writeUInt64(6, uint64_.get(i));
      }
      for (int i = 0; i < sint32_.size(); i++) {
        output.writeSInt32(7, sint32_.get(i));
      }
      for (int i = 0; i < sint64_.size(); i++) {
        output.writeSInt64(8, sint64_.get(i));
      }
      for (int i = 0; i < fixed32_.size(); i++) {
        output.writeFixed32(9, fixed32_.get(i));
      }
      for (int i = 0; i < fixed64_.size(); i++) {
        output.writeFixed64(10, fixed64_.get(i));
      }
      for (int i = 0; i < sfixed32_.size(); i++) {
        output.writeSFixed32(11, sfixed32_.get(i));
      }
      for (int i = 0; i < sfixed64_.size(); i++) {
        output.writeSFixed64(12, sfixed64_.get(i));
      }
      for (int i = 0; i < bool_.size(); i++) {
        output.writeBool(13, bool_.get(i));
      }
      for (int i = 0; i < string_.size(); i++) {
        output.writeBytes(14, string_.getByteString(i));
      }
      for (int i = 0; i < bytes_.size(); i++) {
        output.writeBytes(15, bytes_.get(i));
      }
      for (int i = 0; i < enum_.size(); i++) {
        output.writeEnum(16, enum_.get(i).getNumber());
      }
      for (int i = 0; i < nested_.size(); i++) {
        output.writeMessage(17, nested_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleList().size();
        size += dataSize;
        size += 1 * getDoubleList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatList().size();
        size += dataSize;
        size += 1 * getFloatList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32_.get(i));
        }
        size += dataSize;
        size += 1 * getInt32List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64_.get(i));
        }
        size += dataSize;
        size += 1 * getInt64List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(uint32_.get(i));
        }
        size += dataSize;
        size += 1 * getUint32List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(uint64_.get(i));
        }
        size += dataSize;
        size += 1 * getUint64List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint32_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(sint32_.get(i));
        }
        size += dataSize;
        size += 1 * getSint32List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sint64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt64SizeNoTag(sint64_.get(i));
        }
        size += dataSize;
        size += 1 * getSint64List().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFixed32List().size();
        size += dataSize;
        size += 1 * getFixed32List().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFixed64List().size();
        size += dataSize;
        size += 1 * getFixed64List().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getSfixed32List().size();
        size += dataSize;
        size += 1 * getSfixed32List().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getSfixed64List().size();
        size += dataSize;
        size += 1 * getSfixed64List().size();
      }
      {
        int dataSize = 0;
        dataSize = 1 * getBoolList().size();
        size += dataSize;
        size += 1 * getBoolList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < string_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(string_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getStringList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bytes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(bytes_.get(i));
        }
        size += dataSize;
        size += 1 * getBytesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < enum_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(enum_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * enum_.size();
      }
      for (int i = 0; i < nested_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, nested_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hubspot.jackson.test.util.TestProtobuf.RepeatedFieldsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_RepeatedFields_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_RepeatedFields_fieldAccessorTable;
      }
      
      // Construct using com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNestedFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        double_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        float_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        int32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        bool_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00001000);
        string_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        bytes_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00004000);
        enum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        if (nestedBuilder_ == null) {
          nested_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          nestedBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields.getDescriptor();
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields getDefaultInstanceForType() {
        return com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields.getDefaultInstance();
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields build() {
        com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields buildPartial() {
        com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields result = new com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          double_ = java.util.Collections.unmodifiableList(double_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.double_ = double_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          float_ = java.util.Collections.unmodifiableList(float_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.float_ = float_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          int32_ = java.util.Collections.unmodifiableList(int32_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.int32_ = int32_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          int64_ = java.util.Collections.unmodifiableList(int64_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.int64_ = int64_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32_ = java.util.Collections.unmodifiableList(uint32_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.uint32_ = uint32_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64_ = java.util.Collections.unmodifiableList(uint64_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.uint64_ = uint64_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32_ = java.util.Collections.unmodifiableList(sint32_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.sint32_ = sint32_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64_ = java.util.Collections.unmodifiableList(sint64_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.sint64_ = sint64_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32_ = java.util.Collections.unmodifiableList(fixed32_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.fixed32_ = fixed32_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64_ = java.util.Collections.unmodifiableList(fixed64_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.fixed64_ = fixed64_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32_ = java.util.Collections.unmodifiableList(sfixed32_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.sfixed32_ = sfixed32_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64_ = java.util.Collections.unmodifiableList(sfixed64_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.sfixed64_ = sfixed64_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          bool_ = java.util.Collections.unmodifiableList(bool_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.bool_ = bool_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          string_ = new com.google.protobuf.UnmodifiableLazyStringList(
              string_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.string_ = string_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          bytes_ = java.util.Collections.unmodifiableList(bytes_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.bytes_ = bytes_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          enum_ = java.util.Collections.unmodifiableList(enum_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.enum_ = enum_;
        if (nestedBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            nested_ = java.util.Collections.unmodifiableList(nested_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.nested_ = nested_;
        } else {
          result.nested_ = nestedBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields) {
          return mergeFrom((com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields other) {
        if (other == com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields.getDefaultInstance()) return this;
        if (!other.double_.isEmpty()) {
          if (double_.isEmpty()) {
            double_ = other.double_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDoubleIsMutable();
            double_.addAll(other.double_);
          }
          onChanged();
        }
        if (!other.float_.isEmpty()) {
          if (float_.isEmpty()) {
            float_ = other.float_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFloatIsMutable();
            float_.addAll(other.float_);
          }
          onChanged();
        }
        if (!other.int32_.isEmpty()) {
          if (int32_.isEmpty()) {
            int32_ = other.int32_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInt32IsMutable();
            int32_.addAll(other.int32_);
          }
          onChanged();
        }
        if (!other.int64_.isEmpty()) {
          if (int64_.isEmpty()) {
            int64_ = other.int64_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureInt64IsMutable();
            int64_.addAll(other.int64_);
          }
          onChanged();
        }
        if (!other.uint32_.isEmpty()) {
          if (uint32_.isEmpty()) {
            uint32_ = other.uint32_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUint32IsMutable();
            uint32_.addAll(other.uint32_);
          }
          onChanged();
        }
        if (!other.uint64_.isEmpty()) {
          if (uint64_.isEmpty()) {
            uint64_ = other.uint64_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUint64IsMutable();
            uint64_.addAll(other.uint64_);
          }
          onChanged();
        }
        if (!other.sint32_.isEmpty()) {
          if (sint32_.isEmpty()) {
            sint32_ = other.sint32_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureSint32IsMutable();
            sint32_.addAll(other.sint32_);
          }
          onChanged();
        }
        if (!other.sint64_.isEmpty()) {
          if (sint64_.isEmpty()) {
            sint64_ = other.sint64_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSint64IsMutable();
            sint64_.addAll(other.sint64_);
          }
          onChanged();
        }
        if (!other.fixed32_.isEmpty()) {
          if (fixed32_.isEmpty()) {
            fixed32_ = other.fixed32_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureFixed32IsMutable();
            fixed32_.addAll(other.fixed32_);
          }
          onChanged();
        }
        if (!other.fixed64_.isEmpty()) {
          if (fixed64_.isEmpty()) {
            fixed64_ = other.fixed64_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureFixed64IsMutable();
            fixed64_.addAll(other.fixed64_);
          }
          onChanged();
        }
        if (!other.sfixed32_.isEmpty()) {
          if (sfixed32_.isEmpty()) {
            sfixed32_ = other.sfixed32_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSfixed32IsMutable();
            sfixed32_.addAll(other.sfixed32_);
          }
          onChanged();
        }
        if (!other.sfixed64_.isEmpty()) {
          if (sfixed64_.isEmpty()) {
            sfixed64_ = other.sfixed64_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureSfixed64IsMutable();
            sfixed64_.addAll(other.sfixed64_);
          }
          onChanged();
        }
        if (!other.bool_.isEmpty()) {
          if (bool_.isEmpty()) {
            bool_ = other.bool_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureBoolIsMutable();
            bool_.addAll(other.bool_);
          }
          onChanged();
        }
        if (!other.string_.isEmpty()) {
          if (string_.isEmpty()) {
            string_ = other.string_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureStringIsMutable();
            string_.addAll(other.string_);
          }
          onChanged();
        }
        if (!other.bytes_.isEmpty()) {
          if (bytes_.isEmpty()) {
            bytes_ = other.bytes_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureBytesIsMutable();
            bytes_.addAll(other.bytes_);
          }
          onChanged();
        }
        if (!other.enum_.isEmpty()) {
          if (enum_.isEmpty()) {
            enum_ = other.enum_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureEnumIsMutable();
            enum_.addAll(other.enum_);
          }
          onChanged();
        }
        if (nestedBuilder_ == null) {
          if (!other.nested_.isEmpty()) {
            if (nested_.isEmpty()) {
              nested_ = other.nested_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureNestedIsMutable();
              nested_.addAll(other.nested_);
            }
            onChanged();
          }
        } else {
          if (!other.nested_.isEmpty()) {
            if (nestedBuilder_.isEmpty()) {
              nestedBuilder_.dispose();
              nestedBuilder_ = null;
              nested_ = other.nested_;
              bitField0_ = (bitField0_ & ~0x00010000);
              nestedBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNestedFieldBuilder() : null;
            } else {
              nestedBuilder_.addAllMessages(other.nested_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              ensureDoubleIsMutable();
              double_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDouble(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              ensureFloatIsMutable();
              float_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              ensureInt32IsMutable();
              int32_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addInt32(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              ensureInt64IsMutable();
              int64_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addInt64(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              ensureUint32IsMutable();
              uint32_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUint32(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              ensureUint64IsMutable();
              uint64_.add(input.readUInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUint64(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              ensureSint32IsMutable();
              sint32_.add(input.readSInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSint32(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              ensureSint64IsMutable();
              sint64_.add(input.readSInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSint64(input.readSInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              ensureFixed32IsMutable();
              fixed32_.add(input.readFixed32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFixed32(input.readFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {
              ensureFixed64IsMutable();
              fixed64_.add(input.readFixed64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFixed64(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 93: {
              ensureSfixed32IsMutable();
              sfixed32_.add(input.readSFixed32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSfixed32(input.readSFixed32());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              ensureSfixed64IsMutable();
              sfixed64_.add(input.readSFixed64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSfixed64(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              ensureBoolIsMutable();
              bool_.add(input.readBool());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addBool(input.readBool());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              ensureStringIsMutable();
              string_.add(input.readBytes());
              break;
            }
            case 122: {
              ensureBytesIsMutable();
              bytes_.add(input.readBytes());
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              com.hubspot.jackson.test.util.TestProtobuf.Enum value = com.hubspot.jackson.test.util.TestProtobuf.Enum.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                addEnum(value);
              }
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.hubspot.jackson.test.util.TestProtobuf.Enum value = com.hubspot.jackson.test.util.TestProtobuf.Enum.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(16, rawValue);
                } else {
                  addEnum(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 138: {
              com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder subBuilder = com.hubspot.jackson.test.util.TestProtobuf.Nested.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addNested(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated double double = 1;
      private java.util.List<java.lang.Double> double_ = java.util.Collections.emptyList();;
      private void ensureDoubleIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          double_ = new java.util.ArrayList<java.lang.Double>(double_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<java.lang.Double>
          getDoubleList() {
        return java.util.Collections.unmodifiableList(double_);
      }
      public int getDoubleCount() {
        return double_.size();
      }
      public double getDouble(int index) {
        return double_.get(index);
      }
      public Builder setDouble(
          int index, double value) {
        ensureDoubleIsMutable();
        double_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDouble(double value) {
        ensureDoubleIsMutable();
        double_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDouble(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDoubleIsMutable();
        super.addAll(values, double_);
        onChanged();
        return this;
      }
      public Builder clearDouble() {
        double_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      
      // repeated float float = 2;
      private java.util.List<java.lang.Float> float_ = java.util.Collections.emptyList();;
      private void ensureFloatIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          float_ = new java.util.ArrayList<java.lang.Float>(float_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Float>
          getFloatList() {
        return java.util.Collections.unmodifiableList(float_);
      }
      public int getFloatCount() {
        return float_.size();
      }
      public float getFloat(int index) {
        return float_.get(index);
      }
      public Builder setFloat(
          int index, float value) {
        ensureFloatIsMutable();
        float_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFloat(float value) {
        ensureFloatIsMutable();
        float_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFloat(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatIsMutable();
        super.addAll(values, float_);
        onChanged();
        return this;
      }
      public Builder clearFloat() {
        float_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated int32 int32 = 3;
      private java.util.List<java.lang.Integer> int32_ = java.util.Collections.emptyList();;
      private void ensureInt32IsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          int32_ = new java.util.ArrayList<java.lang.Integer>(int32_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getInt32List() {
        return java.util.Collections.unmodifiableList(int32_);
      }
      public int getInt32Count() {
        return int32_.size();
      }
      public int getInt32(int index) {
        return int32_.get(index);
      }
      public Builder setInt32(
          int index, int value) {
        ensureInt32IsMutable();
        int32_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addInt32(int value) {
        ensureInt32IsMutable();
        int32_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllInt32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32IsMutable();
        super.addAll(values, int32_);
        onChanged();
        return this;
      }
      public Builder clearInt32() {
        int32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated int64 int64 = 4;
      private java.util.List<java.lang.Long> int64_ = java.util.Collections.emptyList();;
      private void ensureInt64IsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          int64_ = new java.util.ArrayList<java.lang.Long>(int64_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Long>
          getInt64List() {
        return java.util.Collections.unmodifiableList(int64_);
      }
      public int getInt64Count() {
        return int64_.size();
      }
      public long getInt64(int index) {
        return int64_.get(index);
      }
      public Builder setInt64(
          int index, long value) {
        ensureInt64IsMutable();
        int64_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addInt64(long value) {
        ensureInt64IsMutable();
        int64_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllInt64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64IsMutable();
        super.addAll(values, int64_);
        onChanged();
        return this;
      }
      public Builder clearInt64() {
        int64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated uint32 uint32 = 5;
      private java.util.List<java.lang.Integer> uint32_ = java.util.Collections.emptyList();;
      private void ensureUint32IsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          uint32_ = new java.util.ArrayList<java.lang.Integer>(uint32_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Integer>
          getUint32List() {
        return java.util.Collections.unmodifiableList(uint32_);
      }
      public int getUint32Count() {
        return uint32_.size();
      }
      public int getUint32(int index) {
        return uint32_.get(index);
      }
      public Builder setUint32(
          int index, int value) {
        ensureUint32IsMutable();
        uint32_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUint32(int value) {
        ensureUint32IsMutable();
        uint32_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUint32IsMutable();
        super.addAll(values, uint32_);
        onChanged();
        return this;
      }
      public Builder clearUint32() {
        uint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // repeated uint64 uint64 = 6;
      private java.util.List<java.lang.Long> uint64_ = java.util.Collections.emptyList();;
      private void ensureUint64IsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          uint64_ = new java.util.ArrayList<java.lang.Long>(uint64_);
          bitField0_ |= 0x00000020;
         }
      }
      public java.util.List<java.lang.Long>
          getUint64List() {
        return java.util.Collections.unmodifiableList(uint64_);
      }
      public int getUint64Count() {
        return uint64_.size();
      }
      public long getUint64(int index) {
        return uint64_.get(index);
      }
      public Builder setUint64(
          int index, long value) {
        ensureUint64IsMutable();
        uint64_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addUint64(long value) {
        ensureUint64IsMutable();
        uint64_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllUint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUint64IsMutable();
        super.addAll(values, uint64_);
        onChanged();
        return this;
      }
      public Builder clearUint64() {
        uint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      
      // repeated sint32 sint32 = 7;
      private java.util.List<java.lang.Integer> sint32_ = java.util.Collections.emptyList();;
      private void ensureSint32IsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sint32_ = new java.util.ArrayList<java.lang.Integer>(sint32_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<java.lang.Integer>
          getSint32List() {
        return java.util.Collections.unmodifiableList(sint32_);
      }
      public int getSint32Count() {
        return sint32_.size();
      }
      public int getSint32(int index) {
        return sint32_.get(index);
      }
      public Builder setSint32(
          int index, int value) {
        ensureSint32IsMutable();
        sint32_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSint32(int value) {
        ensureSint32IsMutable();
        sint32_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSint32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSint32IsMutable();
        super.addAll(values, sint32_);
        onChanged();
        return this;
      }
      public Builder clearSint32() {
        sint32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // repeated sint64 sint64 = 8;
      private java.util.List<java.lang.Long> sint64_ = java.util.Collections.emptyList();;
      private void ensureSint64IsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          sint64_ = new java.util.ArrayList<java.lang.Long>(sint64_);
          bitField0_ |= 0x00000080;
         }
      }
      public java.util.List<java.lang.Long>
          getSint64List() {
        return java.util.Collections.unmodifiableList(sint64_);
      }
      public int getSint64Count() {
        return sint64_.size();
      }
      public long getSint64(int index) {
        return sint64_.get(index);
      }
      public Builder setSint64(
          int index, long value) {
        ensureSint64IsMutable();
        sint64_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSint64(long value) {
        ensureSint64IsMutable();
        sint64_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSint64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSint64IsMutable();
        super.addAll(values, sint64_);
        onChanged();
        return this;
      }
      public Builder clearSint64() {
        sint64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      
      // repeated fixed32 fixed32 = 9;
      private java.util.List<java.lang.Integer> fixed32_ = java.util.Collections.emptyList();;
      private void ensureFixed32IsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          fixed32_ = new java.util.ArrayList<java.lang.Integer>(fixed32_);
          bitField0_ |= 0x00000100;
         }
      }
      public java.util.List<java.lang.Integer>
          getFixed32List() {
        return java.util.Collections.unmodifiableList(fixed32_);
      }
      public int getFixed32Count() {
        return fixed32_.size();
      }
      public int getFixed32(int index) {
        return fixed32_.get(index);
      }
      public Builder setFixed32(
          int index, int value) {
        ensureFixed32IsMutable();
        fixed32_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFixed32(int value) {
        ensureFixed32IsMutable();
        fixed32_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFixed32IsMutable();
        super.addAll(values, fixed32_);
        onChanged();
        return this;
      }
      public Builder clearFixed32() {
        fixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      
      // repeated fixed64 fixed64 = 10;
      private java.util.List<java.lang.Long> fixed64_ = java.util.Collections.emptyList();;
      private void ensureFixed64IsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          fixed64_ = new java.util.ArrayList<java.lang.Long>(fixed64_);
          bitField0_ |= 0x00000200;
         }
      }
      public java.util.List<java.lang.Long>
          getFixed64List() {
        return java.util.Collections.unmodifiableList(fixed64_);
      }
      public int getFixed64Count() {
        return fixed64_.size();
      }
      public long getFixed64(int index) {
        return fixed64_.get(index);
      }
      public Builder setFixed64(
          int index, long value) {
        ensureFixed64IsMutable();
        fixed64_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addFixed64(long value) {
        ensureFixed64IsMutable();
        fixed64_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllFixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFixed64IsMutable();
        super.addAll(values, fixed64_);
        onChanged();
        return this;
      }
      public Builder clearFixed64() {
        fixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      
      // repeated sfixed32 sfixed32 = 11;
      private java.util.List<java.lang.Integer> sfixed32_ = java.util.Collections.emptyList();;
      private void ensureSfixed32IsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          sfixed32_ = new java.util.ArrayList<java.lang.Integer>(sfixed32_);
          bitField0_ |= 0x00000400;
         }
      }
      public java.util.List<java.lang.Integer>
          getSfixed32List() {
        return java.util.Collections.unmodifiableList(sfixed32_);
      }
      public int getSfixed32Count() {
        return sfixed32_.size();
      }
      public int getSfixed32(int index) {
        return sfixed32_.get(index);
      }
      public Builder setSfixed32(
          int index, int value) {
        ensureSfixed32IsMutable();
        sfixed32_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSfixed32(int value) {
        ensureSfixed32IsMutable();
        sfixed32_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSfixed32(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSfixed32IsMutable();
        super.addAll(values, sfixed32_);
        onChanged();
        return this;
      }
      public Builder clearSfixed32() {
        sfixed32_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      
      // repeated sfixed64 sfixed64 = 12;
      private java.util.List<java.lang.Long> sfixed64_ = java.util.Collections.emptyList();;
      private void ensureSfixed64IsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          sfixed64_ = new java.util.ArrayList<java.lang.Long>(sfixed64_);
          bitField0_ |= 0x00000800;
         }
      }
      public java.util.List<java.lang.Long>
          getSfixed64List() {
        return java.util.Collections.unmodifiableList(sfixed64_);
      }
      public int getSfixed64Count() {
        return sfixed64_.size();
      }
      public long getSfixed64(int index) {
        return sfixed64_.get(index);
      }
      public Builder setSfixed64(
          int index, long value) {
        ensureSfixed64IsMutable();
        sfixed64_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSfixed64(long value) {
        ensureSfixed64IsMutable();
        sfixed64_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSfixed64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSfixed64IsMutable();
        super.addAll(values, sfixed64_);
        onChanged();
        return this;
      }
      public Builder clearSfixed64() {
        sfixed64_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      
      // repeated bool bool = 13;
      private java.util.List<java.lang.Boolean> bool_ = java.util.Collections.emptyList();;
      private void ensureBoolIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          bool_ = new java.util.ArrayList<java.lang.Boolean>(bool_);
          bitField0_ |= 0x00001000;
         }
      }
      public java.util.List<java.lang.Boolean>
          getBoolList() {
        return java.util.Collections.unmodifiableList(bool_);
      }
      public int getBoolCount() {
        return bool_.size();
      }
      public boolean getBool(int index) {
        return bool_.get(index);
      }
      public Builder setBool(
          int index, boolean value) {
        ensureBoolIsMutable();
        bool_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addBool(boolean value) {
        ensureBoolIsMutable();
        bool_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllBool(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureBoolIsMutable();
        super.addAll(values, bool_);
        onChanged();
        return this;
      }
      public Builder clearBool() {
        bool_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      
      // repeated string string = 14;
      private com.google.protobuf.LazyStringList string_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStringIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          string_ = new com.google.protobuf.LazyStringArrayList(string_);
          bitField0_ |= 0x00002000;
         }
      }
      public java.util.List<String>
          getStringList() {
        return java.util.Collections.unmodifiableList(string_);
      }
      public int getStringCount() {
        return string_.size();
      }
      public String getString(int index) {
        return string_.get(index);
      }
      public Builder setString(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringIsMutable();
        string_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addString(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStringIsMutable();
        string_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllString(
          java.lang.Iterable<String> values) {
        ensureStringIsMutable();
        super.addAll(values, string_);
        onChanged();
        return this;
      }
      public Builder clearString() {
        string_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }
      void addString(com.google.protobuf.ByteString value) {
        ensureStringIsMutable();
        string_.add(value);
        onChanged();
      }
      
      // repeated bytes bytes = 15;
      private java.util.List<com.google.protobuf.ByteString> bytes_ = java.util.Collections.emptyList();;
      private void ensureBytesIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          bytes_ = new java.util.ArrayList<com.google.protobuf.ByteString>(bytes_);
          bitField0_ |= 0x00004000;
         }
      }
      public java.util.List<com.google.protobuf.ByteString>
          getBytesList() {
        return java.util.Collections.unmodifiableList(bytes_);
      }
      public int getBytesCount() {
        return bytes_.size();
      }
      public com.google.protobuf.ByteString getBytes(int index) {
        return bytes_.get(index);
      }
      public Builder setBytes(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesIsMutable();
        bytes_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBytesIsMutable();
        bytes_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllBytes(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureBytesIsMutable();
        super.addAll(values, bytes_);
        onChanged();
        return this;
      }
      public Builder clearBytes() {
        bytes_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }
      
      // repeated .com.hubspot.jackson.test.util.Enum enum = 16;
      private java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Enum> enum_ =
        java.util.Collections.emptyList();
      private void ensureEnumIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          enum_ = new java.util.ArrayList<com.hubspot.jackson.test.util.TestProtobuf.Enum>(enum_);
          bitField0_ |= 0x00008000;
        }
      }
      public java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Enum> getEnumList() {
        return java.util.Collections.unmodifiableList(enum_);
      }
      public int getEnumCount() {
        return enum_.size();
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum(int index) {
        return enum_.get(index);
      }
      public Builder setEnum(
          int index, com.hubspot.jackson.test.util.TestProtobuf.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEnumIsMutable();
        enum_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addEnum(com.hubspot.jackson.test.util.TestProtobuf.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEnumIsMutable();
        enum_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllEnum(
          java.lang.Iterable<? extends com.hubspot.jackson.test.util.TestProtobuf.Enum> values) {
        ensureEnumIsMutable();
        super.addAll(values, enum_);
        onChanged();
        return this;
      }
      public Builder clearEnum() {
        enum_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      
      // repeated .com.hubspot.jackson.test.util.Nested nested = 17;
      private java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Nested> nested_ =
        java.util.Collections.emptyList();
      private void ensureNestedIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          nested_ = new java.util.ArrayList<com.hubspot.jackson.test.util.TestProtobuf.Nested>(nested_);
          bitField0_ |= 0x00010000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hubspot.jackson.test.util.TestProtobuf.Nested, com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder, com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder> nestedBuilder_;
      
      public java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Nested> getNestedList() {
        if (nestedBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nested_);
        } else {
          return nestedBuilder_.getMessageList();
        }
      }
      public int getNestedCount() {
        if (nestedBuilder_ == null) {
          return nested_.size();
        } else {
          return nestedBuilder_.getCount();
        }
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Nested getNested(int index) {
        if (nestedBuilder_ == null) {
          return nested_.get(index);
        } else {
          return nestedBuilder_.getMessage(index);
        }
      }
      public Builder setNested(
          int index, com.hubspot.jackson.test.util.TestProtobuf.Nested value) {
        if (nestedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedIsMutable();
          nested_.set(index, value);
          onChanged();
        } else {
          nestedBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setNested(
          int index, com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder builderForValue) {
        if (nestedBuilder_ == null) {
          ensureNestedIsMutable();
          nested_.set(index, builderForValue.build());
          onChanged();
        } else {
          nestedBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addNested(com.hubspot.jackson.test.util.TestProtobuf.Nested value) {
        if (nestedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedIsMutable();
          nested_.add(value);
          onChanged();
        } else {
          nestedBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addNested(
          int index, com.hubspot.jackson.test.util.TestProtobuf.Nested value) {
        if (nestedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNestedIsMutable();
          nested_.add(index, value);
          onChanged();
        } else {
          nestedBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addNested(
          com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder builderForValue) {
        if (nestedBuilder_ == null) {
          ensureNestedIsMutable();
          nested_.add(builderForValue.build());
          onChanged();
        } else {
          nestedBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addNested(
          int index, com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder builderForValue) {
        if (nestedBuilder_ == null) {
          ensureNestedIsMutable();
          nested_.add(index, builderForValue.build());
          onChanged();
        } else {
          nestedBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllNested(
          java.lang.Iterable<? extends com.hubspot.jackson.test.util.TestProtobuf.Nested> values) {
        if (nestedBuilder_ == null) {
          ensureNestedIsMutable();
          super.addAll(values, nested_);
          onChanged();
        } else {
          nestedBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearNested() {
        if (nestedBuilder_ == null) {
          nested_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          nestedBuilder_.clear();
        }
        return this;
      }
      public Builder removeNested(int index) {
        if (nestedBuilder_ == null) {
          ensureNestedIsMutable();
          nested_.remove(index);
          onChanged();
        } else {
          nestedBuilder_.remove(index);
        }
        return this;
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder getNestedBuilder(
          int index) {
        return getNestedFieldBuilder().getBuilder(index);
      }
      public com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder getNestedOrBuilder(
          int index) {
        if (nestedBuilder_ == null) {
          return nested_.get(index);  } else {
          return nestedBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder> 
           getNestedOrBuilderList() {
        if (nestedBuilder_ != null) {
          return nestedBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nested_);
        }
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder addNestedBuilder() {
        return getNestedFieldBuilder().addBuilder(
            com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance());
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder addNestedBuilder(
          int index) {
        return getNestedFieldBuilder().addBuilder(
            index, com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance());
      }
      public java.util.List<com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder> 
           getNestedBuilderList() {
        return getNestedFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.hubspot.jackson.test.util.TestProtobuf.Nested, com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder, com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder> 
          getNestedFieldBuilder() {
        if (nestedBuilder_ == null) {
          nestedBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.hubspot.jackson.test.util.TestProtobuf.Nested, com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder, com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder>(
                  nested_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          nested_ = null;
        }
        return nestedBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.hubspot.jackson.test.util.RepeatedFields)
    }
    
    static {
      defaultInstance = new RepeatedFields(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hubspot.jackson.test.util.RepeatedFields)
  }
  
  public interface PropertyNamingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string string_attribute = 1;
    boolean hasStringAttribute();
    String getStringAttribute();
  }
  public static final class PropertyNaming extends
      com.google.protobuf.GeneratedMessage
      implements PropertyNamingOrBuilder {
    // Use PropertyNaming.newBuilder() to construct.
    private PropertyNaming(Builder builder) {
      super(builder);
    }
    private PropertyNaming(boolean noInit) {}
    
    private static final PropertyNaming defaultInstance;
    public static PropertyNaming getDefaultInstance() {
      return defaultInstance;
    }
    
    public PropertyNaming getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_PropertyNaming_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_PropertyNaming_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string string_attribute = 1;
    public static final int STRING_ATTRIBUTE_FIELD_NUMBER = 1;
    private java.lang.Object stringAttribute_;
    public boolean hasStringAttribute() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getStringAttribute() {
      java.lang.Object ref = stringAttribute_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          stringAttribute_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStringAttributeBytes() {
      java.lang.Object ref = stringAttribute_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        stringAttribute_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      stringAttribute_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStringAttributeBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStringAttributeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hubspot.jackson.test.util.TestProtobuf.PropertyNamingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_PropertyNaming_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_PropertyNaming_fieldAccessorTable;
      }
      
      // Construct using com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        stringAttribute_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming.getDescriptor();
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming getDefaultInstanceForType() {
        return com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming.getDefaultInstance();
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming build() {
        com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming buildPartial() {
        com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming result = new com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.stringAttribute_ = stringAttribute_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming) {
          return mergeFrom((com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming other) {
        if (other == com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming.getDefaultInstance()) return this;
        if (other.hasStringAttribute()) {
          setStringAttribute(other.getStringAttribute());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              stringAttribute_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string string_attribute = 1;
      private java.lang.Object stringAttribute_ = "";
      public boolean hasStringAttribute() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getStringAttribute() {
        java.lang.Object ref = stringAttribute_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          stringAttribute_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStringAttribute(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        stringAttribute_ = value;
        onChanged();
        return this;
      }
      public Builder clearStringAttribute() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stringAttribute_ = getDefaultInstance().getStringAttribute();
        onChanged();
        return this;
      }
      void setStringAttribute(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        stringAttribute_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.hubspot.jackson.test.util.PropertyNaming)
    }
    
    static {
      defaultInstance = new PropertyNaming(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hubspot.jackson.test.util.PropertyNaming)
  }
  
  public interface NestedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional double double = 1;
    boolean hasDouble();
    double getDouble();
    
    // optional float float = 2;
    boolean hasFloat();
    float getFloat();
    
    // optional int32 int32 = 3;
    boolean hasInt32();
    int getInt32();
    
    // optional int64 int64 = 4;
    boolean hasInt64();
    long getInt64();
    
    // optional uint32 uint32 = 5;
    boolean hasUint32();
    int getUint32();
    
    // optional uint64 uint64 = 6;
    boolean hasUint64();
    long getUint64();
    
    // optional sint32 sint32 = 7;
    boolean hasSint32();
    int getSint32();
    
    // optional sint64 sint64 = 8;
    boolean hasSint64();
    long getSint64();
    
    // optional fixed32 fixed32 = 9;
    boolean hasFixed32();
    int getFixed32();
    
    // optional fixed64 fixed64 = 10;
    boolean hasFixed64();
    long getFixed64();
    
    // optional sfixed32 sfixed32 = 11;
    boolean hasSfixed32();
    int getSfixed32();
    
    // optional sfixed64 sfixed64 = 12;
    boolean hasSfixed64();
    long getSfixed64();
    
    // optional bool bool = 13;
    boolean hasBool();
    boolean getBool();
    
    // optional string string = 14;
    boolean hasString();
    String getString();
    
    // optional bytes bytes = 15;
    boolean hasBytes();
    com.google.protobuf.ByteString getBytes();
    
    // optional .com.hubspot.jackson.test.util.Enum enum = 16;
    boolean hasEnum();
    com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum();
  }
  public static final class Nested extends
      com.google.protobuf.GeneratedMessage
      implements NestedOrBuilder {
    // Use Nested.newBuilder() to construct.
    private Nested(Builder builder) {
      super(builder);
    }
    private Nested(boolean noInit) {}
    
    private static final Nested defaultInstance;
    public static Nested getDefaultInstance() {
      return defaultInstance;
    }
    
    public Nested getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_Nested_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_Nested_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional double double = 1;
    public static final int DOUBLE_FIELD_NUMBER = 1;
    private double double_;
    public boolean hasDouble() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getDouble() {
      return double_;
    }
    
    // optional float float = 2;
    public static final int FLOAT_FIELD_NUMBER = 2;
    private float float_;
    public boolean hasFloat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getFloat() {
      return float_;
    }
    
    // optional int32 int32 = 3;
    public static final int INT32_FIELD_NUMBER = 3;
    private int int32_;
    public boolean hasInt32() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getInt32() {
      return int32_;
    }
    
    // optional int64 int64 = 4;
    public static final int INT64_FIELD_NUMBER = 4;
    private long int64_;
    public boolean hasInt64() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getInt64() {
      return int64_;
    }
    
    // optional uint32 uint32 = 5;
    public static final int UINT32_FIELD_NUMBER = 5;
    private int uint32_;
    public boolean hasUint32() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getUint32() {
      return uint32_;
    }
    
    // optional uint64 uint64 = 6;
    public static final int UINT64_FIELD_NUMBER = 6;
    private long uint64_;
    public boolean hasUint64() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getUint64() {
      return uint64_;
    }
    
    // optional sint32 sint32 = 7;
    public static final int SINT32_FIELD_NUMBER = 7;
    private int sint32_;
    public boolean hasSint32() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getSint32() {
      return sint32_;
    }
    
    // optional sint64 sint64 = 8;
    public static final int SINT64_FIELD_NUMBER = 8;
    private long sint64_;
    public boolean hasSint64() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getSint64() {
      return sint64_;
    }
    
    // optional fixed32 fixed32 = 9;
    public static final int FIXED32_FIELD_NUMBER = 9;
    private int fixed32_;
    public boolean hasFixed32() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getFixed32() {
      return fixed32_;
    }
    
    // optional fixed64 fixed64 = 10;
    public static final int FIXED64_FIELD_NUMBER = 10;
    private long fixed64_;
    public boolean hasFixed64() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public long getFixed64() {
      return fixed64_;
    }
    
    // optional sfixed32 sfixed32 = 11;
    public static final int SFIXED32_FIELD_NUMBER = 11;
    private int sfixed32_;
    public boolean hasSfixed32() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getSfixed32() {
      return sfixed32_;
    }
    
    // optional sfixed64 sfixed64 = 12;
    public static final int SFIXED64_FIELD_NUMBER = 12;
    private long sfixed64_;
    public boolean hasSfixed64() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public long getSfixed64() {
      return sfixed64_;
    }
    
    // optional bool bool = 13;
    public static final int BOOL_FIELD_NUMBER = 13;
    private boolean bool_;
    public boolean hasBool() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public boolean getBool() {
      return bool_;
    }
    
    // optional string string = 14;
    public static final int STRING_FIELD_NUMBER = 14;
    private java.lang.Object string_;
    public boolean hasString() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getString() {
      java.lang.Object ref = string_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          string_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStringBytes() {
      java.lang.Object ref = string_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        string_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bytes bytes = 15;
    public static final int BYTES_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString bytes_;
    public boolean hasBytes() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public com.google.protobuf.ByteString getBytes() {
      return bytes_;
    }
    
    // optional .com.hubspot.jackson.test.util.Enum enum = 16;
    public static final int ENUM_FIELD_NUMBER = 16;
    private com.hubspot.jackson.test.util.TestProtobuf.Enum enum_;
    public boolean hasEnum() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum() {
      return enum_;
    }
    
    private void initFields() {
      double_ = 0D;
      float_ = 0F;
      int32_ = 0;
      int64_ = 0L;
      uint32_ = 0;
      uint64_ = 0L;
      sint32_ = 0;
      sint64_ = 0L;
      fixed32_ = 0;
      fixed64_ = 0L;
      sfixed32_ = 0;
      sfixed64_ = 0L;
      bool_ = false;
      string_ = "";
      bytes_ = com.google.protobuf.ByteString.EMPTY;
      enum_ = com.hubspot.jackson.test.util.TestProtobuf.Enum.ONE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, double_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, float_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, int32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, int64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, uint32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, uint64_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt32(7, sint32_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt64(8, sint64_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFixed32(9, fixed32_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFixed64(10, fixed64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSFixed32(11, sfixed32_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSFixed64(12, sfixed64_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, bool_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getStringBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, bytes_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeEnum(16, enum_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, double_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, float_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, bool_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getStringBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytes_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, enum_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hubspot.jackson.test.util.TestProtobuf.Nested parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hubspot.jackson.test.util.TestProtobuf.Nested prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hubspot.jackson.test.util.TestProtobuf.NestedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_Nested_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hubspot.jackson.test.util.TestProtobuf.internal_static_com_hubspot_jackson_test_util_Nested_fieldAccessorTable;
      }
      
      // Construct using com.hubspot.jackson.test.util.TestProtobuf.Nested.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        double_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        float_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        int32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        int64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        uint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        uint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        sint32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        sint64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        fixed32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        sfixed32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed64_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        bool_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        string_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        bytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00004000);
        enum_ = com.hubspot.jackson.test.util.TestProtobuf.Enum.ONE;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hubspot.jackson.test.util.TestProtobuf.Nested.getDescriptor();
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.Nested getDefaultInstanceForType() {
        return com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance();
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.Nested build() {
        com.hubspot.jackson.test.util.TestProtobuf.Nested result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hubspot.jackson.test.util.TestProtobuf.Nested buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hubspot.jackson.test.util.TestProtobuf.Nested result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hubspot.jackson.test.util.TestProtobuf.Nested buildPartial() {
        com.hubspot.jackson.test.util.TestProtobuf.Nested result = new com.hubspot.jackson.test.util.TestProtobuf.Nested(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.double_ = double_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.float_ = float_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.int32_ = int32_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.int64_ = int64_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.uint32_ = uint32_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uint64_ = uint64_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sint32_ = sint32_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sint64_ = sint64_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fixed32_ = fixed32_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fixed64_ = fixed64_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sfixed32_ = sfixed32_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sfixed64_ = sfixed64_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.bool_ = bool_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.string_ = string_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.bytes_ = bytes_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.enum_ = enum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hubspot.jackson.test.util.TestProtobuf.Nested) {
          return mergeFrom((com.hubspot.jackson.test.util.TestProtobuf.Nested)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hubspot.jackson.test.util.TestProtobuf.Nested other) {
        if (other == com.hubspot.jackson.test.util.TestProtobuf.Nested.getDefaultInstance()) return this;
        if (other.hasDouble()) {
          setDouble(other.getDouble());
        }
        if (other.hasFloat()) {
          setFloat(other.getFloat());
        }
        if (other.hasInt32()) {
          setInt32(other.getInt32());
        }
        if (other.hasInt64()) {
          setInt64(other.getInt64());
        }
        if (other.hasUint32()) {
          setUint32(other.getUint32());
        }
        if (other.hasUint64()) {
          setUint64(other.getUint64());
        }
        if (other.hasSint32()) {
          setSint32(other.getSint32());
        }
        if (other.hasSint64()) {
          setSint64(other.getSint64());
        }
        if (other.hasFixed32()) {
          setFixed32(other.getFixed32());
        }
        if (other.hasFixed64()) {
          setFixed64(other.getFixed64());
        }
        if (other.hasSfixed32()) {
          setSfixed32(other.getSfixed32());
        }
        if (other.hasSfixed64()) {
          setSfixed64(other.getSfixed64());
        }
        if (other.hasBool()) {
          setBool(other.getBool());
        }
        if (other.hasString()) {
          setString(other.getString());
        }
        if (other.hasBytes()) {
          setBytes(other.getBytes());
        }
        if (other.hasEnum()) {
          setEnum(other.getEnum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              double_ = input.readDouble();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              float_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              int32_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              int64_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              uint32_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uint64_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sint32_ = input.readSInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sint64_ = input.readSInt64();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              fixed32_ = input.readFixed32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              fixed64_ = input.readFixed64();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              sfixed32_ = input.readSFixed32();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              sfixed64_ = input.readSFixed64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              bool_ = input.readBool();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              string_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              bytes_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              com.hubspot.jackson.test.util.TestProtobuf.Enum value = com.hubspot.jackson.test.util.TestProtobuf.Enum.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00008000;
                enum_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional double double = 1;
      private double double_ ;
      public boolean hasDouble() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getDouble() {
        return double_;
      }
      public Builder setDouble(double value) {
        bitField0_ |= 0x00000001;
        double_ = value;
        onChanged();
        return this;
      }
      public Builder clearDouble() {
        bitField0_ = (bitField0_ & ~0x00000001);
        double_ = 0D;
        onChanged();
        return this;
      }
      
      // optional float float = 2;
      private float float_ ;
      public boolean hasFloat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getFloat() {
        return float_;
      }
      public Builder setFloat(float value) {
        bitField0_ |= 0x00000002;
        float_ = value;
        onChanged();
        return this;
      }
      public Builder clearFloat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        float_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 int32 = 3;
      private int int32_ ;
      public boolean hasInt32() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getInt32() {
        return int32_;
      }
      public Builder setInt32(int value) {
        bitField0_ |= 0x00000004;
        int32_ = value;
        onChanged();
        return this;
      }
      public Builder clearInt32() {
        bitField0_ = (bitField0_ & ~0x00000004);
        int32_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 int64 = 4;
      private long int64_ ;
      public boolean hasInt64() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getInt64() {
        return int64_;
      }
      public Builder setInt64(long value) {
        bitField0_ |= 0x00000008;
        int64_ = value;
        onChanged();
        return this;
      }
      public Builder clearInt64() {
        bitField0_ = (bitField0_ & ~0x00000008);
        int64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint32 uint32 = 5;
      private int uint32_ ;
      public boolean hasUint32() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getUint32() {
        return uint32_;
      }
      public Builder setUint32(int value) {
        bitField0_ |= 0x00000010;
        uint32_ = value;
        onChanged();
        return this;
      }
      public Builder clearUint32() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uint32_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint64 uint64 = 6;
      private long uint64_ ;
      public boolean hasUint64() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getUint64() {
        return uint64_;
      }
      public Builder setUint64(long value) {
        bitField0_ |= 0x00000020;
        uint64_ = value;
        onChanged();
        return this;
      }
      public Builder clearUint64() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uint64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional sint32 sint32 = 7;
      private int sint32_ ;
      public boolean hasSint32() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getSint32() {
        return sint32_;
      }
      public Builder setSint32(int value) {
        bitField0_ |= 0x00000040;
        sint32_ = value;
        onChanged();
        return this;
      }
      public Builder clearSint32() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sint32_ = 0;
        onChanged();
        return this;
      }
      
      // optional sint64 sint64 = 8;
      private long sint64_ ;
      public boolean hasSint64() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getSint64() {
        return sint64_;
      }
      public Builder setSint64(long value) {
        bitField0_ |= 0x00000080;
        sint64_ = value;
        onChanged();
        return this;
      }
      public Builder clearSint64() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sint64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional fixed32 fixed32 = 9;
      private int fixed32_ ;
      public boolean hasFixed32() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getFixed32() {
        return fixed32_;
      }
      public Builder setFixed32(int value) {
        bitField0_ |= 0x00000100;
        fixed32_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixed32() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fixed32_ = 0;
        onChanged();
        return this;
      }
      
      // optional fixed64 fixed64 = 10;
      private long fixed64_ ;
      public boolean hasFixed64() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public long getFixed64() {
        return fixed64_;
      }
      public Builder setFixed64(long value) {
        bitField0_ |= 0x00000200;
        fixed64_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixed64() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fixed64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional sfixed32 sfixed32 = 11;
      private int sfixed32_ ;
      public boolean hasSfixed32() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getSfixed32() {
        return sfixed32_;
      }
      public Builder setSfixed32(int value) {
        bitField0_ |= 0x00000400;
        sfixed32_ = value;
        onChanged();
        return this;
      }
      public Builder clearSfixed32() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sfixed32_ = 0;
        onChanged();
        return this;
      }
      
      // optional sfixed64 sfixed64 = 12;
      private long sfixed64_ ;
      public boolean hasSfixed64() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public long getSfixed64() {
        return sfixed64_;
      }
      public Builder setSfixed64(long value) {
        bitField0_ |= 0x00000800;
        sfixed64_ = value;
        onChanged();
        return this;
      }
      public Builder clearSfixed64() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sfixed64_ = 0L;
        onChanged();
        return this;
      }
      
      // optional bool bool = 13;
      private boolean bool_ ;
      public boolean hasBool() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public boolean getBool() {
        return bool_;
      }
      public Builder setBool(boolean value) {
        bitField0_ |= 0x00001000;
        bool_ = value;
        onChanged();
        return this;
      }
      public Builder clearBool() {
        bitField0_ = (bitField0_ & ~0x00001000);
        bool_ = false;
        onChanged();
        return this;
      }
      
      // optional string string = 14;
      private java.lang.Object string_ = "";
      public boolean hasString() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getString() {
        java.lang.Object ref = string_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          string_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setString(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        string_ = value;
        onChanged();
        return this;
      }
      public Builder clearString() {
        bitField0_ = (bitField0_ & ~0x00002000);
        string_ = getDefaultInstance().getString();
        onChanged();
        return this;
      }
      void setString(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        string_ = value;
        onChanged();
      }
      
      // optional bytes bytes = 15;
      private com.google.protobuf.ByteString bytes_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasBytes() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public com.google.protobuf.ByteString getBytes() {
        return bytes_;
      }
      public Builder setBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        bytes_ = value;
        onChanged();
        return this;
      }
      public Builder clearBytes() {
        bitField0_ = (bitField0_ & ~0x00004000);
        bytes_ = getDefaultInstance().getBytes();
        onChanged();
        return this;
      }
      
      // optional .com.hubspot.jackson.test.util.Enum enum = 16;
      private com.hubspot.jackson.test.util.TestProtobuf.Enum enum_ = com.hubspot.jackson.test.util.TestProtobuf.Enum.ONE;
      public boolean hasEnum() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public com.hubspot.jackson.test.util.TestProtobuf.Enum getEnum() {
        return enum_;
      }
      public Builder setEnum(com.hubspot.jackson.test.util.TestProtobuf.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00008000;
        enum_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnum() {
        bitField0_ = (bitField0_ & ~0x00008000);
        enum_ = com.hubspot.jackson.test.util.TestProtobuf.Enum.ONE;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.hubspot.jackson.test.util.Nested)
    }
    
    static {
      defaultInstance = new Nested(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hubspot.jackson.test.util.Nested)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hubspot_jackson_test_util_AllFields_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hubspot_jackson_test_util_AllFields_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hubspot_jackson_test_util_RepeatedFields_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hubspot_jackson_test_util_RepeatedFields_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hubspot_jackson_test_util_PropertyNaming_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hubspot_jackson_test_util_PropertyNaming_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hubspot_jackson_test_util_Nested_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hubspot_jackson_test_util_Nested_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntest.proto\022\035com.hubspot.jackson.test.u" +
      "til\"\345\002\n\tAllFields\022\016\n\006double\030\001 \001(\001\022\r\n\005flo" +
      "at\030\002 \001(\002\022\r\n\005int32\030\003 \001(\005\022\r\n\005int64\030\004 \001(\003\022\016" +
      "\n\006uint32\030\005 \001(\r\022\016\n\006uint64\030\006 \001(\004\022\016\n\006sint32" +
      "\030\007 \001(\021\022\016\n\006sint64\030\010 \001(\022\022\017\n\007fixed32\030\t \001(\007\022" +
      "\017\n\007fixed64\030\n \001(\006\022\020\n\010sfixed32\030\013 \001(\017\022\020\n\010sf" +
      "ixed64\030\014 \001(\020\022\014\n\004bool\030\r \001(\010\022\016\n\006string\030\016 \001" +
      "(\t\022\r\n\005bytes\030\017 \001(\014\0221\n\004enum\030\020 \001(\0162#.com.hu" +
      "bspot.jackson.test.util.Enum\0225\n\006nested\030\021" +
      " \001(\0132%.com.hubspot.jackson.test.util.Nes",
      "ted\"\352\002\n\016RepeatedFields\022\016\n\006double\030\001 \003(\001\022\r" +
      "\n\005float\030\002 \003(\002\022\r\n\005int32\030\003 \003(\005\022\r\n\005int64\030\004 " +
      "\003(\003\022\016\n\006uint32\030\005 \003(\r\022\016\n\006uint64\030\006 \003(\004\022\016\n\006s" +
      "int32\030\007 \003(\021\022\016\n\006sint64\030\010 \003(\022\022\017\n\007fixed32\030\t" +
      " \003(\007\022\017\n\007fixed64\030\n \003(\006\022\020\n\010sfixed32\030\013 \003(\017\022" +
      "\020\n\010sfixed64\030\014 \003(\020\022\014\n\004bool\030\r \003(\010\022\016\n\006strin" +
      "g\030\016 \003(\t\022\r\n\005bytes\030\017 \003(\014\0221\n\004enum\030\020 \003(\0162#.c" +
      "om.hubspot.jackson.test.util.Enum\0225\n\006nes" +
      "ted\030\021 \003(\0132%.com.hubspot.jackson.test.uti" +
      "l.Nested\"*\n\016PropertyNaming\022\030\n\020string_att",
      "ribute\030\001 \001(\t\"\253\002\n\006Nested\022\016\n\006double\030\001 \001(\001\022" +
      "\r\n\005float\030\002 \001(\002\022\r\n\005int32\030\003 \001(\005\022\r\n\005int64\030\004" +
      " \001(\003\022\016\n\006uint32\030\005 \001(\r\022\016\n\006uint64\030\006 \001(\004\022\016\n\006" +
      "sint32\030\007 \001(\021\022\016\n\006sint64\030\010 \001(\022\022\017\n\007fixed32\030" +
      "\t \001(\007\022\017\n\007fixed64\030\n \001(\006\022\020\n\010sfixed32\030\013 \001(\017" +
      "\022\020\n\010sfixed64\030\014 \001(\020\022\014\n\004bool\030\r \001(\010\022\016\n\006stri" +
      "ng\030\016 \001(\t\022\r\n\005bytes\030\017 \001(\014\0221\n\004enum\030\020 \001(\0162#." +
      "com.hubspot.jackson.test.util.Enum*\030\n\004En" +
      "um\022\007\n\003ONE\020\001\022\007\n\003TWO\020\002B\016B\014TestProtobuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_hubspot_jackson_test_util_AllFields_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_hubspot_jackson_test_util_AllFields_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hubspot_jackson_test_util_AllFields_descriptor,
              new java.lang.String[] { "Double", "Float", "Int32", "Int64", "Uint32", "Uint64", "Sint32", "Sint64", "Fixed32", "Fixed64", "Sfixed32", "Sfixed64", "Bool", "String", "Bytes", "Enum", "Nested", },
              com.hubspot.jackson.test.util.TestProtobuf.AllFields.class,
              com.hubspot.jackson.test.util.TestProtobuf.AllFields.Builder.class);
          internal_static_com_hubspot_jackson_test_util_RepeatedFields_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_hubspot_jackson_test_util_RepeatedFields_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hubspot_jackson_test_util_RepeatedFields_descriptor,
              new java.lang.String[] { "Double", "Float", "Int32", "Int64", "Uint32", "Uint64", "Sint32", "Sint64", "Fixed32", "Fixed64", "Sfixed32", "Sfixed64", "Bool", "String", "Bytes", "Enum", "Nested", },
              com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields.class,
              com.hubspot.jackson.test.util.TestProtobuf.RepeatedFields.Builder.class);
          internal_static_com_hubspot_jackson_test_util_PropertyNaming_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_hubspot_jackson_test_util_PropertyNaming_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hubspot_jackson_test_util_PropertyNaming_descriptor,
              new java.lang.String[] { "StringAttribute", },
              com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming.class,
              com.hubspot.jackson.test.util.TestProtobuf.PropertyNaming.Builder.class);
          internal_static_com_hubspot_jackson_test_util_Nested_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_hubspot_jackson_test_util_Nested_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hubspot_jackson_test_util_Nested_descriptor,
              new java.lang.String[] { "Double", "Float", "Int32", "Int64", "Uint32", "Uint64", "Sint32", "Sint64", "Fixed32", "Fixed64", "Sfixed32", "Sfixed64", "Bool", "String", "Bytes", "Enum", },
              com.hubspot.jackson.test.util.TestProtobuf.Nested.class,
              com.hubspot.jackson.test.util.TestProtobuf.Nested.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
